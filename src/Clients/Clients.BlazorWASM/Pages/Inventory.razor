@page "/inventory"
@using Clients.BlazorWASM.Models
@inject HttpClient httpClient

<h3>Inventory</h3>
<MudDataGrid Items="@Elements"
             ReadOnly="@_isReadOnly" EditMode="@DataGridEditMode.Cell">
    <Columns>
@*         <HierarchyColumn T="Elements" ButtonDisabledFunc="@(x => x.CategoryCode == "He")" InitiallyExpandedFunc="@(x => x.CategoryCode == "Li")" />
        <PropertyColumn Property="x => x.CategoryCode" Title="Nr" />
        <PropertyColumn Property="x => x.CategoryDesc" /> *@
    </Columns>
    <ChildRowContent>
        <MudCard>
            <MudCardHeader>
                <CardHeaderContent>
                    @*   <MudText Typo="Typo.h6">@context.Item.Name</MudText> *@
                </CardHeaderContent>
            </MudCardHeader>
            <MudCardContent>
                @*                 <MudText>This element is number @context.Item.Number</MudText>
                <MudText>This element has a molar mass of @context.Item.Molar</MudText> *@
            </MudCardContent>
        </MudCard>
    </ChildRowContent>
    <PagerContent>
       @*  <MudDataGridPager T="@Elem" /> *@
    </PagerContent>
</MudDataGrid>


<div class="d-flex flex-wrap mt-4">
    <MudSwitch T="bool" @bind-Value="_isReadOnly" Color="@Color.Primary">Read Only</MudSwitch>
</div>

@code{
    public List<CategoryDto> Elements { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        var response = await httpClient.GetFromJsonAsync<List<PaginatedResult<CategoryDto>>>("https://localhost:7271/api/Category?PaginationRequest.PageIndex=0&PaginationRequest.PageSize=20");
        if (response is null) return;

        // foreach (var product in response)
        //     Elements.Add(product);

        
    }

    private bool _isReadOnly = true;
}
